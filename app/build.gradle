apply plugin: 'com.android.application'
apply from: 'buildscripts/jacoco.gradle'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-kapt"
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    kotlinOptions.useIR = true

    defaultConfig {
        applicationId "com.fMarket.app"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "0.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk.debugSymbolLevel = 'SYMBOL_TABLE'

        //Define custom key in BuildConfig from local.properties file
        def localProperties = new Properties()
        localProperties.load(new FileInputStream(rootProject.file("local.properties")))
        buildConfigField("String", "CLIENT_ID", "\"" + localProperties['clientId'] + "\"")
        buildConfigField("String", "CLIENT_SECRET", "\"" + localProperties['clientSecret'] + "\"")
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }

    //Flavors
    flavorDimensions "env"
    productFlavors {
        mock {
            dimension "env"
            externalNativeBuild {
                cmake {
                    cppFlags '-DMOCK'
                }
            }
        }
        staging {
            dimension "env"
            externalNativeBuild {
                cmake {
                    cppFlags '-DSTAGING'
                }
            }
        }
        production {
            dimension "env"
            externalNativeBuild {
                cmake {
                    cppFlags '-DPRODUCTION'
                }
            }
        }
    }

    //Set flags for development
    applicationVariants.all { variant ->
        def api = variant.productFlavors[0].getName()
        if (api == "mock" || api == "staging")
            variant.buildConfigField "boolean", "ENABLE_API_LOG", "true"
        else
            variant.buildConfigField "boolean", "ENABLE_API_LOG", "false"
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    //Setup sampledata
    sourceSets {
        test {
            resources.srcDirs += ['sampledata']
        }
        androidTest {
            resources.srcDirs += ['sampledata']
        }
    }

    //Build apk output
    final buildDate = new Date().format("yyyyMMddHHmm")
    applicationVariants.all {
        variant ->
            variant.outputs.all {
                output -> outputFileName = "FoodMarket ${variant.versionName} ${variant.name} ${buildDate}.apk"
            }
    }

    //Setup native build endpoint encryption
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }

    //Enable android resource in testing
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0'
    implementation 'com.google.firebase:firebase-firestore-ktx:23.0.3'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:3.11.2'
    testImplementation "android.arch.core:core-testing:1.1.1"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2"

    //Koin Dependency Injection
    implementation "org.koin:koin-core:2.1.6"
    implementation "org.koin:koin-core-ext:2.1.6"
    implementation "org.koin:koin-androidx-scope:2.1.6"
    implementation "org.koin:koin-androidx-viewmodel:2.1.6"

    //Retrofit, OkHttp, Interceptors
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'

    //Image compressor
    implementation 'id.zelory:compressor:3.0.1'

    //Storage
    implementation 'com.orhanobut:hawk:2.0.1'

    //Picasso
    implementation 'me.relex:circleindicator:2.1.6'
    implementation 'com.squareup.picasso:picasso:2.71828'

    //OTP view
    implementation 'com.github.aabhasr1:OtpView:v1.1.2-ktx'

    //Reyclerview divider
    implementation 'com.github.fondesa:recycler-view-divider:3.1.0'

    //Image loader
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    //Runtime permission
    implementation 'com.karumi:dexter:6.2.2'

    //Eventbus
    implementation 'org.greenrobot:eventbus:3.2.0'

    //Image picker
    implementation 'com.github.dhaval2404:imagepicker:1.8'

    //Flow layout
    implementation 'com.nex3z:flow-layout:1.3.2'

    //Download file
    implementation "io.ktor:ktor-client-android:1.2.5"

    //Firebase
    implementation platform('com.google.firebase:firebase-bom:26.8.0')
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-firestore'
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-dynamic-links-ktx'

    //Places and location
    implementation "com.google.android.libraries.places:places:2.4.0"
    implementation 'com.google.android.gms:play-services-places:17.0.0'
    implementation 'io.nlopez.smartlocation:library:3.3.3'

    // Shimmer
    implementation 'com.facebook.shimmer:shimmer:0.1.0@aar'

    // SDP
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
}